type Album @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  owner: ID!
  ownerId: String!
  name: String!
  createdAt: String
  updatedAt: String
  description: String
  brand: String
  age: Float
  condition: String
  price: Float
  replacement: Float
  photos: [Photo] @connection(name: "AlbumPhotos", sortField: "createdAt")
}

type Photo
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: private, provider: iam, operations: [read, update] }
    ]
  ) {
  id: ID!
  createdAt: String
  updatedAt: String
  album: Album @connection(name: "AlbumPhotos", sortField: "createdAt")
  fullsize: S3Object!
  thumbnail: S3Object
  contentType: String
  gps: GPS
  height: Int
  width: Int
  size: Int
  shopTitle: String
  shopUrl: String
  shopRating: Float
  shopDescription: String
  shopDetails: String
  shopPrice: Float
  shopDelivery: Float
  shopRelevancy: Float
}

type S3Object @aws_iam @aws_cognito_user_pools {
  region: String!
  bucket: String!
  key: String!
}

type GPS {
  latitude: String!
  longitude: String!
  altitude: Float!
}
